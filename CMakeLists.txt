cmake_minimum_required(VERSION 2.8)
project(dyad C)

set (DYAD_VERSION_MAJOR 0)
set (DYAD_VERSION_MINOR 2)
set (DYAD_VERSION_PATCH 1)

set(CMAKE_VERBOSE_MAKEFILE TRUE)

include(conanbuildinfo.cmake)
conan_basic_setup()

set(SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/source_subfolder/src)
if (WIN32 AND MSVC AND BUILD_SHARED_LIBS)
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
endif (WIN32 AND MSVC AND BUILD_SHARED_LIBS)

add_library(${CMAKE_PROJECT_NAME} ${SOURCE_DIR}/dyad.c ${SOURCE_DIR}/dyad.h)
if (WIN32)
    target_link_libraries(${CMAKE_PROJECT_NAME} ws2_32)
endif (WIN32)
set_property(TARGET ${CMAKE_PROJECT_NAME} PROPERTY C_STANDARD 99)

if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
    target_compile_options(${CMAKE_PROJECT_NAME} PRIVATE -Wall -Wextra -Werror -pedantic)
endif(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)

install(TARGETS ${CMAKE_PROJECT_NAME}
        RUNTIME DESTINATION bin
        LIBRARY DESTINATION lib
        ARCHIVE DESTINATION lib)

install(FILES ${SOURCE_DIR}/dyad.h DESTINATION include
        PERMISSIONS OWNER_WRITE OWNER_READ GROUP_READ WORLD_READ)
